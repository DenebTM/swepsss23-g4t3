<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property name="LOG_ROOT" value="logs" />
    <property resource="application.properties" />
    <!--Taken from
     - https://stackoverflow.com/questions/46853433/spring-boot-logging-into-mysql-database/46874881#46874881
     - https://howtodoinjava.com/logback/rollingfileappender/-->

    <!-- Console appender -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- Database appender -->
    <appender name="db" class="ch.qos.logback.classic.db.DBAppender">
        <connectionSource
                class="ch.qos.logback.core.db.DriverManagerConnectionSource">
            <driverClass>org.h2.Driver</driverClass>
            <url>jdbc:h2:mem:skel</url>
            <user>sa</user>
            <password>password</password>
        </connectionSource>
    </appender>

    <!-- Info-file appender-->
    <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_ROOT}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_ROOT}/info-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- each archived file's size will be max 10MB -->
            <maxFileSize>10MB</maxFileSize>
            <!-- 30 days to keep -->
            <maxHistory>30</maxHistory>
            <!-- total size of all archive files, if total size > 100GB, it will delete old archived file -->
            <totalSizeCap>100GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Warnings and errors file appender-->
    <appender name="warnError" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <file>${LOG_ROOT}/warnError.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_ROOT}/warnError-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- each archived file's size will be max 10MB -->
            <maxFileSize>10MB</maxFileSize>
            <!-- 30 days to keep -->
            <maxHistory>30</maxHistory>
            <!-- total size of all archive files, if total size > 100GB, it will delete old archived file -->
            <totalSizeCap>100GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <logger name="infoLog">
        <appender-ref ref="info" level="info"/>
    </logger>
    <!-- the level of the root level is set to INFO by default. -->
    <root level="info">
        <appender-ref ref="stdout" level="info"/>
        <appender-ref ref="db" level="warn"/>
        <appender-ref ref="info" level="info"/>
        <appender-ref ref="warnError" level="warn"/>
    </root>

</configuration>